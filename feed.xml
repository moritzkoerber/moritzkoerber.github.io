<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://moritzkoerber.github.io/</id><title>Moritz Körber</title><subtitle>A blog on various data science topics that I stumbled upon.</subtitle> <updated>2025-10-01T20:52:23+02:00</updated> <author> <name>Moritz Körber</name> <uri>https://moritzkoerber.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://moritzkoerber.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://moritzkoerber.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Moritz Körber </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Add data quality checks to your duckdb pipeline with Soda Core</title><link href="https://moritzkoerber.github.io/posts/duckdb-soda/" rel="alternate" type="text/html" title="Add data quality checks to your duckdb pipeline with Soda Core" /><published>2023-06-15T00:00:00+02:00</published> <updated>2023-10-12T21:09:23+02:00</updated> <id>https://moritzkoerber.github.io/posts/duckdb-soda/</id> <content src="https://moritzkoerber.github.io/posts/duckdb-soda/" /> <author> <name>Moritz Körber</name> </author> <summary> duckdb is a great and fast choice for pipelines running on a single instance and is an even better match if you’re pipeline oozes with SQL. To ensure that what you are doing with duckdb is actually legit, you can use the Python library Soda Core to run some data quality checks on your output. It’s super simple to combine them. For example, you have a data pipeline that computes a data mart tabl... </summary> </entry> <entry><title>Data Engineering Practice</title><link href="https://moritzkoerber.github.io/posts/de-exercises/" rel="alternate" type="text/html" title="Data Engineering Practice" /><published>2022-04-08T00:00:00+02:00</published> <updated>2023-10-12T21:09:23+02:00</updated> <id>https://moritzkoerber.github.io/posts/de-exercises/</id> <content src="https://moritzkoerber.github.io/posts/de-exercises/" /> <author> <name>Moritz Körber</name> </author> <summary> Yesterday, I finished the last exercise of Daniel Beach’s amazing data engineering exercises. The exercises look simple at first glance, but in each exercise I stumbled upon something of which I thought I had mastered it, when in reality I had to give it some thought. Here are my solutions. A little bonus motivation for anyone to tackle them, too: Daniel sends you a free copy of his book if yo... </summary> </entry> <entry><title>Simple and secure deployment with Github Actions OpenID Connect (OIDC)</title><link href="https://moritzkoerber.github.io/posts/deploy-with-oidc/" rel="alternate" type="text/html" title="Simple and secure deployment with Github Actions OpenID Connect (OIDC)" /><published>2021-11-28T00:00:00+01:00</published> <updated>2023-10-12T21:09:23+02:00</updated> <id>https://moritzkoerber.github.io/posts/deploy-with-oidc/</id> <content src="https://moritzkoerber.github.io/posts/deploy-with-oidc/" /> <author> <name>Moritz Körber</name> </author> <summary> Continuous delivery (CD) workflows implemented Github Actions help deploy software, create and update cloud infrastructure, or make use of various services of cloud providers like Amazon Web Services (AWS). To do this, a workflow needs to authenticate itself to the cloud provider through credentials to gain access to those resources and services. Up until now, you would create credentials in t... </summary> </entry> <entry><title>Version metadata are like charging cables: Versioning your package with setuptools_scm</title><link href="https://moritzkoerber.github.io/posts/versioning-with-setuptools_scm/" rel="alternate" type="text/html" title="Version metadata are like charging cables: Versioning your package with setuptools_scm" /><published>2021-08-14T00:00:00+02:00</published> <updated>2023-10-12T21:09:23+02:00</updated> <id>https://moritzkoerber.github.io/posts/versioning-with-setuptools_scm/</id> <content src="https://moritzkoerber.github.io/posts/versioning-with-setuptools_scm/" /> <author> <name>Moritz Körber</name> </author> <summary> If you have ever forgotten to pack a charging cable or something else for a trip, you probably have noticed that we humans are prone to errors in simple and repetitive routine tasks 1. Because machines have a much lower error rate at such tasks, I prefer to delegate and automate as many routine tasks as possible. Versioning a package is one of such tasks. If you want your package to live on the... </summary> </entry> <entry><title>How to plot a grouped stacked bar chart in plotly</title><link href="https://moritzkoerber.github.io/posts/plotly-grouped-stacked-bar-chart/" rel="alternate" type="text/html" title="How to plot a grouped stacked bar chart in plotly" /><published>2020-09-11T00:00:00+02:00</published> <updated>2023-10-12T21:09:23+02:00</updated> <id>https://moritzkoerber.github.io/posts/plotly-grouped-stacked-bar-chart/</id> <content src="https://moritzkoerber.github.io/posts/plotly-grouped-stacked-bar-chart/" /> <author> <name>Moritz Körber</name> </author> <summary> plotly makes it easy to create an interactive stacked or grouped bar chart in Python by assigning the desired type to the layout attribute barmode. Unfortunately, barmode only takes either stack or group but not both as an argument. It seems like they are currently working on this option, but there is a workaround for now: subcategory axes! Let’s say you compare two design layouts of your onli... </summary> </entry> </feed>
